{"title":"**Introducción**","markdown":{"headingText":"**Introducción**","containsRefs":false,"markdown":"\n<h1><b>Reporte escrito. Experimentos y análisis de algoritmos de búsqueda por comparación.</b></h1>\n\n<h1><b>Alumno: David Segundo Garcia</b></h1>\n\n----\n\n\n\n\nLos algoritmos de búsqueda constituyen un componente esencial en la eficiencia de los sistemas de recuperación de información, estructuras de datos y procesamiento a gran escala. Su desempeño depende no solo de su complejidad teórica, sino también del tipo de datos sobre los que se aplican: ordenados, parcialmente ordenados o perturbados. Por ello, entender cómo se comportan en distintos contextos es fundamental para seleccionar la mejor estrategia algorítmica.\n\nEste estudio analiza experimentalmente cinco enfoques distintos de búsqueda:\n- Búsqueda **binaria acotada**\n- Búsqueda **secuencial (B₀)**\n- Búsqueda **no acotada B₁ (doblando el índice)**\n- Búsqueda **no acotada B₂ (crecimiento más agresivo)**\n- Búsqueda utilizando la estructura **SkipList** (Pugh, 1990)\n\nPara ello, se implementaron todos los algoritmos desde cero en Python, y se evaluaron usando archivos reales de consultas y listas de posteo con distintos grados de perturbación. Las pruebas se realizaron tanto en conjuntos de datos **ordenados** (consultas 1 a 4) como en datos con **perturbaciones progresivas** (niveles p016 a p512), simulando condiciones que podrían encontrarse en sistemas reales de búsqueda de documentos.\n\nLa comparación de los métodos se realizó con base en dos métricas clave:\n- **Tiempo de ejecución** (en segundos)\n- **Número de comparaciones** necesarias para resolver cada consulta\n\nLos resultados fueron visualizados mediante **gráficos de barras agrupadas** y **mapas de calor (heatmaps)**, con el fin de facilitar la interpretación del comportamiento de cada algoritmo en distintos escenarios. Además, se discutieron las ventajas y limitaciones de cada método con base en su comportamiento observado frente a los diferentes niveles de orden y desorden.\n\nEste enfoque práctico permite evaluar no solo el rendimiento teórico, sino también su aplicabilidad en contextos dinámicos, donde los datos no siempre cumplen condiciones ideales. Así, se brinda una visión integral sobre qué algoritmo conviene utilizar en función del estado de los datos, sus propiedades estadísticas y las necesidades operacionales del sistema.\n\n---\n\n\n## **Instrucciones**:\n\n1. **Implementa** y **compara** los siguientes algoritmos de búsqueda:\n\n   - Búsqueda binaria acotada  \n   - Búsqueda secuencial $B_0$  \n   - Búsqueda no acotada $B_1$  \n   - Búsqueda no acotada $B_2$  \n   - Búsqueda mediante la estructura de datos **SkipList**  \n\n2. **Utiliza** los diferentes archivos proporcionados, los cuales tienen datos con diferentes distribuciones. Usa las listas de posteo de la Unidad 3 y los archivos de consulta para obtener las consultas que deberán realizarse. Mide tanto el número de comparaciones como el tiempo necesario para solucionar las consultas.\n\n3. **Compara** todos los métodos implementados por archivo de consulta, usa figuras o tablas de datos (número de comparaciones y tiempo por separado).\n\n4. **Discuta** sus resultados.\n\n-----\n\n<h1><b>Solución</b></h1>\n\n### Definimos las librerías que usaremos:\n\n### Funcíon para cargar datos de la carpeta zip\n\n## **Funciones para algoritmos de búsqueda**\n\n ### **Búsqueda Binaria Acotada:**\n\n### **Busqueda Secuencial $B_0$:**\n\n### **Búsqueda No Acotada $B_1$:**\n\n### **Búsqueda no acotada $B_2$:**\n\n### Búsqueda mediante la estructura de datos **SkipList**:\n\n\n## Preparación de datos y estructura auxiliar de búsqueda\n\n\nEste bloque de código se encarga de procesar los conjuntos de datos originales (consultas y listas con perturbaciones), organizando los términos de forma ordenada y eliminando duplicados. Además, crea instancias de la estructura SkipListOrden para cada conjunto, facilitando una estrategia de búsqueda eficiente. También se define una función auxiliar `search_with_skiplist` que permite realizar búsquedas secuenciales sobre la lista ordenada generada por la SkipList sin modificar la clase original.\n\n\n\n## Evaluación de algoritmos de búsqueda\n\nEste bloque implementa la lógica necesaria para medir el rendimiento de los algoritmos de búsqueda:\n- **Binaria**\n- **Secuencial ($B_0$)**\n- **No acotada $B_1$ y $B_2$**\n- **SkipList**\n\nIncluye tres funciones principales:\n\n- `measure_execution`: Mide el **tiempo de ejecución** y el **número de comparaciones** realizadas por cualquier algoritmo.\n- `evaluate_single_query`: Ejecuta todos los algoritmos sobre una única consulta y recopila los resultados.\n- `evaluate_search_algorithms`: Evalúa un conjunto completo de consultas y\n\n\n## Funciones para comparar los métodos implementados por archivo de consulta\n\n## Tablas de calor (heatmaps) de resultados\n\nEsta función genera visualizaciones tipo heatmap para mostrar los tiempos de ejecución y comparaciones promedio por algoritmo. Permite comparar fácilmente el rendimiento de búsqueda en diferentes conjuntos de consultas y niveles de perturbación.\n\n\n## Gráficos de barras comparativos\n\nEsta función visualiza el rendimiento de los algoritmos de búsqueda mediante gráficos de barras. Compara tiempo de ejecución y número de comparaciones en conjuntos de consultas y perturbaciones, permitiendo observar fácilmente las diferencias entre binaria, secuencial, no acotadas y SkipList.\n\n\n### Tablas de calor (heatmaps) de resultados\n\n### Gráficos de barras entre algoritmos de búsqueda.\n\n## Interpretación de los Resultados\n\nLos resultados obtenidos permiten analizar con claridad el comportamiento de diversos algoritmos de búsqueda bajo dos tipos de escenarios: **consultas sobre listas ordenadas** y **consultas sobre listas con distintos niveles de perturbación**. Se evaluó el rendimiento en términos de **tiempo de ejecución** (en segundos) y **número de comparaciones promedio** por búsqueda, brindando una comparación empírica que refuerza las propiedades teóricas de cada técnica.\n\n---\n\n##Análisis para consultas\n\n- **La búsqueda binaria** demostró ser altamente eficiente, con tiempos muy bajos (entre `2.5e-6` y `4.3e-6` segundos) y un número de comparaciones que se mantuvo relativamente bajo (de **3.4 a 12.1** en promedio). Esto confirma su desempeño óptimo en arreglos ordenados y valida su complejidad de **O(log n)**. La eficiencia se mantuvo estable en todos los archivos de consulta, lo cual respalda su uso como método preferido cuando el tamaño del conjunto es conocido y los datos están ordenados (*Cormen et al., 2022*).\n\n- **La búsqueda secuencial (B₀)** mostró el rendimiento más bajo entre todos los métodos evaluados. Sus tiempos fueron significativamente más altos (alrededor de `0.00037` a `0.00041` segundos) y el número de comparaciones fue extremadamente alto (**4688 a 5000**), en concordancia con su complejidad **O(n)**. Este resultado es consistente con la literatura (*Bentley & McGeoch, 1985*), que posiciona esta estrategia como subóptima en conjuntos grandes o cuando se requiere eficiencia.\n\n- **Las búsquedas no acotadas B₁ y B₂** ofrecieron una alternativa válida a la búsqueda binaria, especialmente útil en contextos donde el tamaño del arreglo no es conocido. Aunque su tiempo fue ligeramente mayor, las comparaciones promediaron entre **13.6 y 23.4**, lo que las vuelve aceptables en escenarios dinámicos. B₂ presentó un mejor desempeño que B₁ en todos los casos, evidenciando una mayor eficiencia en la delimitación del rango de búsqueda (*Bentley y Yao, 1976*).\n\n- **SkipList**, por su parte, tuvo el peor desempeño en tiempo de ejecución (`0.0010` a `0.0015` segundos) y realizó el mismo número de comparaciones que la búsqueda secuencial (**hasta 5000**), lo cual indica que, en este caso, su naturaleza probabilística y su capacidad de inserción no ofrecieron ventajas competitivas frente a los algoritmos clásicos. Esto es consistente con el comportamiento teórico de esta estructura, que tiende a estabilizarse en consultas múltiples pero no necesariamente destaca en listas estáticas y ordenadas (*Pugh, 1990*).\n\n---\n\n## Análisis sobre perturbaciones.\n\n- **Búsqueda binaria**  \n  Mantuvo un número de comparaciones constante (~**5.8**) en todos los niveles de perturbación. Esta **resistencia al desorden** es una propiedad bien documentada (*Cook & Kim, 1980*), quienes demostraron que la binaria sigue siendo efectiva incluso en listas \"casi ordenadas\".\n\n- **Búsqueda secuencial (B₀)**  \n  Continuó mostrando su debilidad con **50.5 comparaciones promedio**, incluso en listas levemente perturbadas. Esta falta de adaptabilidad confirma que su complejidad **O(n)** la hace poco recomendable fuera de conjuntos pequeños.\n\n- **Búsqueda no acotada B₁**  \n  Promedió **10.66 comparaciones**, lo que representa una mejora considerable sobre B₀. Sin embargo, sigue siendo menos eficiente que la búsqueda binaria. Esta estrategia se beneficia de su diseño recursivo para determinar un límite superior de búsqueda, aunque es más sensible al patrón de distribución de los datos.\n\n- **Búsqueda no acotada B₂**  \n  Fue ligeramente más eficiente que B₁ con **9.2 comparaciones**, validando los hallazgos de *Estivill-Castro & Wood (1992)*, quienes proponen que algoritmos adaptativos son preferibles cuando el orden o tamaño de los datos es incierto.\n\n- **SkipList**  \n  Aunque su diseño sugiere buena adaptabilidad, el rendimiento fue equivalente a B₀ (**50.5 comparaciones**) con tiempos mayores (`1.4e-5` a `1.6e-5` segundos). En este experimento, su acceso probabilístico no logró mitigar el impacto del desorden, probablemente porque los datos no favorecían su reorganización progresiva (*Pugh, 1990*).\n\n---\n\n### Conclusiones generales\n\n- Para listas **ordenadas y de tamaño conocido**, la **búsqueda binaria** es la mejor opción por su rapidez, bajo número de comparaciones y resistencia incluso a pequeños niveles de perturbación.\n- En escenarios **sin orden o sin tamaño conocido**, las **búsquedas no acotadas** (especialmente B₂) ofrecen un buen compromiso entre adaptabilidad y eficiencia, logrando hasta **60% menos comparaciones** que la secuencial.\n- **SkipList**, aunque teóricamente potente, **no demostró ventajas significativas** en estos datos estáticos. Su valor podría apreciarse mejor en estructuras dinámicas con inserciones frecuentes.\n- La **búsqueda secuencial** se mantuvo como la menos eficiente en todos los contextos, reforzando su uso exclusivo en situaciones muy simples o con listas de tamaño pequeño.\n\n\n---\n\n## **Referencias**\n\n- Cook, C. R., & Kim, D. J. (1980). Best sorting algorithm for nearly sorted lists. *Communications of the ACM, 23*(11), 620–628.  \n- Estivill-Castro, V., & Wood, D. (1992). A survey of adaptive sorting algorithms. *ACM Computing Surveys, 24*(4), 441–476.  \n- Fosdick, L. D., & Cline, A. K. (Eds.). (1974). *Some performance tests of “quicksort” and descendants*. Smithsonian Astrophysical Observatory.  \n- Pugh, W. (1990). Skip lists: A probabilistic alternative to balanced trees. *Communications of the ACM, 33*(6), 668–676.\n\n---\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"css":["styles.css"],"output-file":"SegundoDavid_U4_T1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","theme":{"light":"flatly","dark":"darkly"},"toc-location":"right","toc-title":"En esta página"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
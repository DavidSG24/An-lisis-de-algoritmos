---
title: "An√°lisis de algoritmos 2025-1"
format:
  html:
    toc: true
    page-layout: full
---


## Acerca del sitio

Este sitio web acad√©mico re√∫ne una colecci√≥n de reportes experimentales desarrollados como parte del curso *An√°lisis de algoritmos 2025-1*. Cada unidad contiene an√°lisis comparativos de distintos enfoques algor√≠tmicos, aplicados a problemas cl√°sicos de la computaci√≥n como ordenamiento, b√∫squeda, operaciones matriciales e intersecci√≥n de conjuntos.

Los reportes incluyen:

- Implementaciones desde cero en Python
- Simulaciones controladas con conjuntos de datos
- Visualizaciones con gr√°ficas, tablas y mapas de calor
- Evaluaci√≥n te√≥rica y emp√≠rica del desempe√±o algor√≠tmico

El objetivo es ofrecer una visi√≥n pr√°ctica, cr√≠tica y completa del comportamiento de los algoritmos bajo distintos escenarios, para fortalecer el criterio t√©cnico en la elecci√≥n de estructuras y estrategias de programaci√≥n.

---

## Unidad 1: An√°lisis de Crecimiento Algor√≠tmico

Este reporte explora y compara visualmente distintos √≥rdenes de crecimiento (como O(1), O(log n), O(n log n), O(n¬≤), O(n!), etc.) mediante simulaciones en Python. Se generan gr√°ficas y tablas para ilustrar c√≥mo cada funci√≥n crece con el tama√±o de la entrada, analizando tambi√©n el impacto en tiempos de ejecuci√≥n y costos computacionales.

[Ir al reporte de la Unidad 1](SegundoDavid_U1_T1.ipynb)

---

## Unidad 2: Estructuras de Datos y √Ålgebra Lineal

En este estudio se comparan dos m√©todos cl√°sicos del √°lgebra lineal computacional: la multiplicaci√≥n de matrices y la eliminaci√≥n gaussiana (y su variante Gauss-Jordan). Se eval√∫an en t√©rminos de operaciones realizadas y tiempo de ejecuci√≥n en matrices aleatorias de diferentes tama√±os, identificando en qu√© contextos es m√°s eficiente cada enfoque.

üîó [Ir al reporte de la Unidad 2](SegundoDavid_U2_T1.ipynb)

---

## Unidad 3: Algoritmos de Ordenamiento

Este reporte presenta la implementaci√≥n y evaluaci√≥n de cinco m√©todos de ordenamiento: Heapsort, Mergesort, Quicksort, Bubblesort y ordenamiento con SkipList. Se analiza el rendimiento de cada algoritmo con diferentes niveles de desorden en los datos, considerando tanto el n√∫mero de comparaciones como el tiempo requerido.

üîó [Ir al reporte de la Unidad 3](SegundoDavid_U3_T1.ipynb)

---

## Unidad 4: Algoritmos de B√∫squeda por Comparaci√≥n

Se estudian distintas estrategias de b√∫squeda: secuencial, binaria acotada, b√∫squedas no acotadas (B1, B2) y mediante SkipList. El an√°lisis incluye datos perturbados y ordenados, evaluando el desempe√±o con m√©tricas como tiempo y n√∫mero de comparaciones. Se discute la aplicabilidad de cada t√©cnica seg√∫n el tipo de datos.

üîó [Ir al reporte de la Unidad 4](SegundoDavid_U4_T1.ipynb)

---

## Unidad 5: Intersecci√≥n y Uni√≥n de Conjuntos Ordenados

Este documento compara algoritmos para calcular intersecciones de conjuntos ordenados: Melding, Baeza-Yates (con bisecci√≥n, B1, B2) y Barbay-Kenyon. Se aplican sobre pares, tripletas y tetrapletas de listas para evaluar tiempo, comparaciones y tama√±o de la intersecci√≥n, utilizando gr√°ficos boxplot para representar resultados.

üîó [Ir al reporte de la Unidad 5](SegundoDavid_U5_T1.ipynb)

---
